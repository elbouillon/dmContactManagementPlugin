Company:
  columns:
    id:           { type: integer(4), primary: true, unsigned: true, notnull: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
    type:         { type: string(10), notnull: true }
    short_name:   { type: string(50) }
    notes:        { type: string(4000) }
    homepage:     { type: string(100) }
  relations:
    Contacts:
      class:    Contact
      local:    company_id
      foreign:  contact_id
      refClass: CompanyContactRel


CompanyContactRel:
  columns:
    role:         { type: enum, values: ['billing', 'contact', 'default'], default: 'default' }
    company_id:   { type: integer(4), primary: true, unsigned: true, notnull: true }
    contact_id:   { type: integer(4), primary: true, unsigned: true, notnull: true }


Contact:
  columns:
    id:           { type: integer(4), primary: true, unsigned: true, notnull: true, autoincrement: true }
    type:         { type: string(100), notnull: true }
    firstname:    { type: string(100), notnull: true }
    lastname:     { type: string(100) }
    job_title:    { type: string(100) }
    notes:        { type: string(4000), extra: markdown }
    image_id:     { type: integer }
    user_id:      { type: integer }
  relations:
    Companies:
      class:    Company
      local:    contact_id
      foreign:  company_id
      refClass: CompanyContactRel
    User:
      class:        DmUser
      local:        user_id
      cascade:      [delete]
    Image:
      class:        DmMedia
      local:        image_id
      cascade:      [delete]
    PhoneNumbers:
      type:         many
      class:        PhoneNumber
      local:        id
      foreign:      related_id
      cascade:      [delete]
    Addresses:
      type:         many
      class:        Address
      local:        id
      foreign:      related_id
      cascade:      [delete]
    Emails:
      type:         many
      class:        Email
      local:        id
      foreign:      related_id
      cascade:      [delete]


Email:
  columns:
    id:         { type: integer(4), unsigned: true, primary: true, notnull: true, autoincrement: true }
    type:       { type: enum, values: ['work', 'home', 'other'], default: 'work' }
    email:      { type: string(255) }
    related_id: { type: integer(4), unsigned: true, notnull: true }


Address:
  columns:
    id:         { type: integer(4), unsigned: true, primary: true, notnull: true, autoincrement: true }
    type:       { type: enum, values: ['work', 'home', 'other'], default: 'work' }
    address:    { type: string(255) }
    zipcode:    { type: string(20) }
    city:       { type: string(200) }
    country:    { type: string(30) }
    related_id: { type: integer(4), unsigned: true, notnull: true }


PhoneNumber:
  columns:
    id:         { type: integer(4), unsigned: true, primary: true, notnull: true, autoincrement: true }
    type:       { type: enum, values: ['fax', 'home', 'home_fax', 'mobile', 'other', 'pager', 'work', 'work_fax'], default: 'work' }
    number:     { type: string(100) }
    related_id: { type: integer(4), unsigned: true, notnull: true }